version: 0.2
env:
  variables:
    CLUSTER_NAME: "codepipeline-01"
    REGION_NAME: "us-east-1"
    
phases:
  install:
    commands:
      - echo Installing Terraform...
      - cat /etc/os-release
      - sudo yum install -y yum-utils shadow-utils; sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo; sudo yum -y install terraform
      - terraform version
      
  pre_build:
    commands:
      - echo Initializing Terraform...
      - terraform init; terraform fmt; terraform validate
  build:
    commands:
      - echo Planning Terraform...
      - terraform plan -var cluster-name=$CLUSTER_NAME
      - echo Applying Terraform...
      - terraform apply --auto-approve -var cluster-name=$CLUSTER_NAME || export BUILD_FAILED=true
      - echo Verify the Cluster
      - kubectl cluster-info
      - echo Applying Kubernetes manifests...
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION_NAME
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.0/deploy/static/provider/cloud/deploy.yaml
      - kubectl apply -k ./ || export POD_FAILED=true
  
  post_build:
    commands:
      - |
        if [ "$BUILD_FAILED" == "true" ]; then
          echo "Build failed, sending alert and triggering destroy"
          terraform destroy -auto-approve -var cluster-name=$CLUSTER_NAME
        else
          echo "Build succeeded"
        fi
        if [ "$POD_FAILED" == "true" ]; then
          echo "Pod failed, sending alert and triggering destroy"
          kubectl delete deployment --all --all-namespaces=true
        else
          echo "Deployment succeeded"
          kubectl get secrets -n wordpress --all-namespaces
          kubectl get pvc -n wordpress --all-namespaces
          kubectl get all -n wordpress -o wide --all-namespaces
          kubectl get ingress -n wordpress --all-namespaces
        fi               
      - echo Build completed on `date`

artifacts:
  files:
    - '**/*'
  discard-paths: yes
